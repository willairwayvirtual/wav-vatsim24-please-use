<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="MainLayoutPanel.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>